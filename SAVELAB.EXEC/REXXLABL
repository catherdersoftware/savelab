  /*---------------------  rexx procedure  -------------------- *
  | Name:      REXXLABL                                        |
  |                                                            |
  | Function:  ISPF Edit Macro to Create Edit Labels for       |
  |            each routine label for REXX code.               |
  |                                                            |
  | Usage Notes:  Routine labels are for routines that         |
  |               start with text and end with a :             |
  |                                                            |
  |               The label will be the 1st letter of each     |
  |               part of the routine or the 1st 5 chars of    |
  |               routine name.                                |
  |                                                            |
  |               Examples:                                    |
  |                  DoIt:        ->    .doit                  |
  |                  Do_It:       ->    .di                    |
  |                  DoSomething: ->    .dosom                 |
  |                  Do_it1:      ->    .di                    |
  |                                                            |
  |              Routine labels with numbers or special chars  |
  |              will be have them translated to blanks.       |
  |                                                            |
  |              Existing labels will be unchanged.            |
  |                                                            |
  |              Duplicate labels will have a suffix of        |
  |              A, B, ... appended if possible.               |
  |              * if label is 5 chars then last removed and   |
  |                the suffix appended.                        |
  |                                                            |
  | Dependencies:  Designed for use with REXX code             |
  |                                                            |
  | Author:    Lionel B. Dyck                                  |
  |                                                            |
  | History:  (most recent on top)                             |
  |            2022/07/11 LBD - Invoke Savelab li              |
  |            2022/07/10 LBD - Creation                       |
  |                                                            |
  * ---------------------------------------------------------- */
  Address ISREdit
  'Macro (options)'

  parse value '' with null lab.
  count = 0
  current = 0
  alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

Start:
  '(last)  = linenum .zlast'
  call get_labels

Do_It:
  do i = 1 to last
    '(d) = line' i
    if right(word(d,1),1) /= ':' then iterate
    "(l1,l2) = Label" i
    if l1 /= null then iterate /* skip is it has a label */
    parse value d with name':'.
    name = translate(name,' ','0123456789$@#')
    if pos('_',name) > 0 then do
      name = translate(name,' ','_')
      label = null
      do w = 1 to words(name)
        label = label''left(word(name,w),1)
      end
      end
     else label = strip(left(name,5))
    label = strip(left(translate(label),5))
    if lab.label = 1 then call fixup_label

    lab.label = 1
    'label' i '= .'label 0
    count = count + 1
  end

DoneWithTheTask:
  zedsmsg = null
  zedlmsg = count 'labels created with' current' existing'
  Address ISPExec ,
    'Setmsg msg(isrz001)'
  x = savelab('LI')
  exit

Fixup_Label:
  Select
    When length(label) < 5 then do
      c = 0
      do forever
        c = c + 1
        tlab = label''substr(alpha,c,1)
        if lab.tlab = 1 then iterate
        label = tlab
        return
      end
    end
    Otherwise do
    label = left(label,4)   /* get 4 chars from label */
      c = 0
      do forever  /* now add suffix to it */
        c = c + 1
        tlab = label''substr(alpha,c,1)
        if lab.tlab = 1 then iterate
        label = tlab
        return
      end

    end
  end
  return

Get_Labels:
  "Locate Label First"
  if rc > 0 then return
  do forever
    "(line) = Display_Lines"
    "(l1,l2) = Label" line
    l1 = strip(substr(l1,2))
    lab.l1 = 1
    current = current + 1
    "Locate Label Next"
    if rc > 0 then leave
  end
  return
